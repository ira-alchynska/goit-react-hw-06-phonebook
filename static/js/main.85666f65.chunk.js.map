{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-redusers.js","redux/store.js","components/Container/Container.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ButtonForm.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","filteredContact","itemsReducer","createReducer","state","payload","undefined","find","item","name","alert","addOneContact","filter","id","deleteOneContact","filterReducer","_","combineReducers","items","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","useStyles","createUseStyles","container","margin","right","left","top","padding","width","Container","children","classes","className","button","marginLeft","backgroundColor","border","borderRadius","cursor","marginBottom","ContactListItem","number","onDeleteContact","type","onClick","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","connect","filteredContacts","dispatch","map","input","outline","boxShadow","onHandleChange","event","target","value","titel","placeholder","onChange","bottom","display","ButtonForm","onSubmitForm","labelInputIdName","uuidv4","labelInputIdNumber","useState","setName","setNumber","handleChange","currentTarget","resetForm","styles","form","onSubmit","preventDefault","label","htmlFor","required","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.85666f65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1t2A0\",\"label\":\"ContactForm_label__iH0p4\",\"input\":\"ContactForm_input__2NpA6\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add');\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filteredContact = createAction('contacts/filtered');\r\n\r\nexport { addContact, deleteContact, filteredContact };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filteredContact } from './contacts-actions';\r\n\r\nconst INITIAL_CONTACTS = [\r\n  /*  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }, */\r\n];\r\n\r\nconst addOneContact = (state, payload) => {\r\n  const includedInContacts = state.find(item => item.name === payload.name);\r\n\r\n  if (includedInContacts !== undefined) {\r\n    alert(`${payload.name} is already in contacts`);\r\n    return state;\r\n  }\r\n\r\n  return [...state, payload];\r\n};\r\n\r\nconst deleteOneContact = (state, payload) => {\r\n  return state.filter(({ id }) => id !== payload);\r\n};\r\n\r\nconst itemsReducer = createReducer(INITIAL_CONTACTS, {\r\n  [addContact]: (state, { payload }) => addOneContact(state, payload),\r\n  [deleteContact]: (state, { payload }) => deleteOneContact(state, payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filteredContact]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './Contacts/contacts-redusers';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n      top: '20px',\r\n    },\r\n    padding: '20px',\r\n    width: '400px',\r\n  },\r\n});\r\n\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    marginLeft: '10px',\r\n    backgroundColor: 'white',\r\n    border: ['1px', 'solid', 'grey'],\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n  item: {\r\n    marginBottom: '10px',\r\n  },\r\n});\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.item}>\r\n      <span>{name}</span>: <span>{number}</span>\r\n      <button\r\n        className={classes.button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/Contacts/contacts-actions';\r\n\r\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  filteredContacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { filteredContact } from '../../redux/Contacts/contacts-actions';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  input: {\r\n    padding: '5px',\r\n    outline: 'none',\r\n    '&:focus': {\r\n      border: ['2px', 'solid', 'blue'],\r\n      boxShadow: [\r\n        'inset',\r\n        '0px',\r\n        '0px',\r\n        '3px',\r\n        '3px',\r\n        'rgba(116, 113, 255, 0.34)',\r\n      ],\r\n    },\r\n  },\r\n});\r\n\r\nconst Filter = ({ filter, onHandleChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <h3 className={classes.titel}>Find contacts by name</h3>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        placeholder=\"Search contact\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onHandleChange: event => dispatch(filteredContact(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    cursor: 'pointer',\r\n    margin: {\r\n      right: 'auto',\r\n      left: 'auto',\r\n      top: '20px',\r\n      bottom: '20px',\r\n    },\r\n    display: 'block',\r\n    padding: '5px',\r\n    width: '140px',\r\n    backgroundColor: 'transparent',\r\n    borderRadius: '5px',\r\n    '&:hover': {\r\n      backgroundColor: ' rgba(116, 113, 255, 0.34)',\r\n    },\r\n  },\r\n});\r\n\r\nconst ButtonForm = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <button className={classes.button} type=\"submit\">\r\n      Add contact\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonForm from './ButtonForm';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/Contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst ContactForm = ({ onSubmitForm }) => {\r\n  const labelInputIdName = uuidv4();\r\n  const labelInputIdNumber = uuidv4();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    const contact = { id: uuidv4(), name: name, number: number };\r\n    event.preventDefault();\r\n    onSubmitForm(contact);\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    if (name === 'name') setName(value);\r\n    if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label} htmlFor={labelInputIdName}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        required\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <label className={styles.label} htmlFor={labelInputIdNumber}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={styles.input}\r\n        id={labelInputIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        required\r\n        placeholder=\"Enter you number\"\r\n        value={number}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <ButtonForm />\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmitForm: contact => dispatch(addContact(contact)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\n\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}